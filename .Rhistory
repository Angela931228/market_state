}
print(currentIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_price[newIndex,2]-hsi_price[currentIndex,2])/hsi_price[currentIndex,2])
currentIndex<- newIndex
}
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex,2]-hsi_emd_res[currentIndex,2])/hsi_emd_res[currentIndex,2])
currentIndex<- newIndex
}
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
td<- data.frame(hsi_price[,1],hsi_emd_res)
View(td)
write.csv(td,"hsi_emd_res")
write.csv(td,"hsi_emd_res.csv")
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
hsi_price[length(hsi_price),1]
hsi_price[length(hsi_price),1] - hsi_price[1,1]
hsi_price[nrow(hsi_price),1] - hsi_price[1,1]
sum(segDuration)
length(result)
result[length(result),]
result[length(result)]
result[length(result)]==hsi_price[nrow(hsi_price),1]
segDuration<- diff(result)
sum(segDuration)
result<- {}
result<- rbind(result,hsi_price[1,1])
for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result, hsi_price[i+1,1])
}
}
# handle the last point
if(result[length(result)]!=hsi_price[nrow(hsi_price),1]){
result<- rbind(result, hsi_price[nrow(hsi_price),1])
}
segDuration<- diff(result)
sum(segDuration)
rTest<-splitSequence(segDuration)
rTest
rTest<-splitSequence(rTest)
rMergeTest<-mergeSequence(rTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest
rMergeTest<-mergeSequence(rMergeTest)
rMergeTest
mergeSequence <- function(segDuration){
#split first
for(i in 1: (length(segDuration))){
if(length(segDuration)>=i){
if(segDuration[i]<20){
if(i==1){
segDuration[i+1]<- segDuration[i]+segDuration[i+1]
segDuration<-deleteBy(segDuration,i)
}else if(i==length(segDuration)){
segDuration[i-1]<- segDuration[i]+segDuration[i-1]
segDuration<-deleteBy(segDuration,i)
}else if(i>1&&segDuration[i+1]>segDuration[i-1]){
segDuration[i-1]<- segDuration[i]+segDuration[i-1]
segDuration<-deleteBy(segDuration,i)
}else{
segDuration[i+1]<- segDuration[i]+segDuration[i+1]
segDuration<-deleteBy(segDuration,i)
}
}
}
}
return(segDuration)
}
rMergeTest<-mergeSequence(rMergeTest)
rMergeTest
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
sum(rMergeTest)
nrow(hsi_price)
currentIndex<-1
for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
if(result[length(result)]!=nrow(hsi_price)){
result<- rbind(result, nrow(hsi_price))
}
segDuration<- diff(result)
splitSequence <- function(segDuration){
#split first
for(i in 1: length(segDuration)){
if(segDuration[i]>40){
half<-segDuration[i]/2
segDuration[i]<-ceiling(half)
segDuration <- insertInto(segDuration,i,floor(half))
}
}
return(segDuration)
}
mergeSequence <- function(segDuration){
#split first
for(i in 1: (length(segDuration))){
if(length(segDuration)>=i){
if(segDuration[i]<15){
if(i==1){
segDuration[i+1]<- segDuration[i]+segDuration[i+1]
segDuration<-deleteBy(segDuration,i)
}else if(i==length(segDuration)){
segDuration[i-1]<- segDuration[i]+segDuration[i-1]
segDuration<-deleteBy(segDuration,i)
}else if(i>1&&segDuration[i+1]>segDuration[i-1]){
segDuration[i-1]<- segDuration[i]+segDuration[i-1]
segDuration<-deleteBy(segDuration,i)
}else{
segDuration[i+1]<- segDuration[i]+segDuration[i+1]
segDuration<-deleteBy(segDuration,i)
}
}
}
}
return(segDuration)
}
insertInto <- function(DF, position,data){
d_result <- append(DF[c(1:(position))],data)
if(position+1<=length(DF))
d_result<-append(d_result,DF[c((position+1):length(DF))])
return(d_result)
}
deleteBy <- function(DF, position){
if((position-1)>=1&&(position+1)<=length(DF)){
d_result<- append(DF[c(1:(position-1))],DF[c((position+1):length(DF))])
}else if((position-1)==0)
d_result<-DF[c((position+1):length(DF))]
else if(position==length(DF))
d_result<-DF[c(1:(position-1))]
return(d_result)
}
rTest<-splitSequence(segDuration)
rTest<-splitSequence(rTest)
rMergeTest<-mergeSequence(rTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest
result
result<- {}
result<- rbind(result,hsi_price[1,1])
#for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result, hsi_price[i+1,1])
}
}
for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result,i+1)
}
}
# handle the last point
if(result[length(result)]!=nrow(hsi_price)){
result<- rbind(result, nrow(hsi_price))
}
segDuration<- diff(result)
result<- {}
result<- rbind(result,hsi_price[1,1])
#for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result, hsi_price[i+1,1])
}
#}
for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result,i+1)
}
}
# handle the last point
if(result[length(result)]!=nrow(hsi_price)){
result<- rbind(result, nrow(hsi_price))
}
segDuration<- diff(result)
segDuara
segDuration
rTest<-splitSequence(segDuration)
rTest<-splitSequence(rTest)
rMergeTest<-mergeSequence(rTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest
result<- {}
result<- rbind(result,1)
#for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result, hsi_price[i+1,1])
}
#}
for(i in 1:(length(firstD)-1)){
if(firstD[i]*firstD[i+1]<0){
result<- rbind(result,i+1)
}
}
# handle the last point
if(result[length(result)]!=nrow(hsi_price)){
result<- rbind(result, nrow(hsi_price))
}
segDuration<- diff(result)
rTest<-splitSequence(segDuration)
rTest<-splitSequence(rTest)
rMergeTest<-mergeSequence(rTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest<-splitSequence(rMergeTest)
rMergeTest
currentIndex<-1
#for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
#}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
rMergeTest
currentIndex<-1
#for(i in 1:length(rMergeTest)){
if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i])))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1))))!=0) {
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+1)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+2)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+3)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+4)))
}else if(length(which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5))))!=0){
newIndex<-which(hsi_price[,1]==(hsi_price[currentIndex,1]+(rMergeTest[i]+5)))
}
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print(hsi_price[newIndex,2])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
#}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
currentIndex<-1
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
print((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex])
currentIndex<- newIndex
}
sum(rMergeTest)
nrow(hsi_price)
rMergeTest
currentIndex<-1
changeRates<-{}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
print(currentIndex)
print(newIndex)
print(rMergeTest[i])
changeRate <- (hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex]
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
}
write.csv(changeRates, "changeRates.csv")
comIndex <- rbind(comIndex,currentIndex )
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- (hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex]
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
comIndex
comIndex
length(rMergeTest)
length(comIndex)
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
signals <- {}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- round((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex],digits=2)
if(changeRate>=0.02){
signals<- rbind(signals, 'U')
}else if(changeRate <= -0.02){
signals<- rbind(signals,'D')
}else {
signals< rbind(signals,'S')
}
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
signals <- {}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- round((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex],digits=2)
if(changeRate>=0.02){
signals<- append(signals, 'U')
}else if(changeRate <= -0.02){
signals<- append(signals,'D')
}else {
signals< append(signals,'S')
}
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
signals
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
signals <- {}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- round((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex],digits=2)
if(changeRate>=0.02){
signals<- append(signals, 'U')
}else if(changeRate <= -0.02){
signals<- append(signals,'D')
}else {
signals< append(signals,'N')
}
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
signals <- {}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- round((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex],digits=2)
if(changeRate>=0.02){
signals<- append(signals, 'U')
}else if(changeRate <= -0.02){
signals<- append(signals,'D')
}else {
signals<- append(signals,'N')
}
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
signals
currentIndex<-1
changeRates<-{}
comIndex <-{}
comIndex <- rbind(comIndex,currentIndex )
signals <- {}
for(i in 1:length(rMergeTest)){
newIndex<- currentIndex + rMergeTest[i]
changeRate <- round((hsi_emd_res[newIndex]-hsi_emd_res[currentIndex])/hsi_emd_res[currentIndex],digits=2)
if(changeRate>=0.02){
signals<- append(signals, 'U')
}else if(changeRate <= -0.02){
signals<- append(signals,'D')
}else {
signals<- append(signals,'S')
}
changeRates <- rbind(changeRates,changeRate)
currentIndex<- newIndex
comIndex <- rbind(comIndex,currentIndex )
}
signals
hsi_price[comIndex,]
hsi_price[comIndex,1]
write.csv(hsi_price[comIndex,1],"segIndex.csv")
source('C:/Users/angela.zhou/Desktop/angela_dissertation/market_state/rScript/hsi_change_pointDetection.R')
signals
